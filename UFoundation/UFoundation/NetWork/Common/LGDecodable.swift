//
//  LGDecodable.swift
//  UFoundation
//
//  Created by dong on 3.3.22.
//  Copyright © 2022 Uni. All rights reserved.
//

import UIKit
import Alamofire

/// 序列化交付给具体的模型，提供一个序列化能力 LGDecodable
protocol LGDecodable {

    /// 解析数据
    /// - Returns: Self指的是符合协议的类型
    static func parse(json : Any) -> Self?
    
}



/*
解释：POP就是通过 协议扩展，协议继承 和 协议组合 的方式来设计需要编写的代码。
 
 1.如果某个具体类型想要遵守一个协议，那它需要实现这个协议所定义的所有内容
 
 2.协议扩展：
    (1):提供协议方法的默认实现和协议属性的默认值，从而使它们成为可选；符合协议的类型可以提供自己的实现，也可以使用默认的实现。
    (2):添加协议中未声明的附加方法实现，并且实现协议的任何类型都可以使用到这些附加方法。
 
 3.协议继承:
    协议可以从其他协议继承，然后在它继承的需求之上添加功能，因此可以提供更细粒度和更灵活的设计。
 
 4.协议的组合
    类、结构体和枚举可以符合多个协议，它们可以采用多个协议的默认实现。
 */


/*
 优点：
 
 结构体、枚举等值类型也可以使用
 以继承多个协议，弥补 swift 中类单继承的不足
 增强代码的可扩展性，减少代码的冗余
 让项目更加组件化，代码可读性更高
 让无需的功能代码组成一个功能块，更便于单元测试。
 */


/*
 Self和self：

Self指的是符合协议的类型
self指的是该类型内的值
 
 注意:
 1.Self可以用于协议(protocol)中限制相关的类型
 2.Self可以用于类(Class)中来充当方法的返回值类型
 */
 
